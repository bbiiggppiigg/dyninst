@article{api-code-patching,
author = {Buck, Bryan and Hollingsworth, Jeffrey K.},
title = {An API for Runtime Code Patching},
year = {2000},
issue_date = {November  2000},
publisher = {Sage Publications, Inc.},
address = {USA},
volume = {14},
number = {4},
issn = {1094-3420},
url = {https://doi.org/10.1177/109434200001400404},
doi = {10.1177/109434200001400404},
journal = {Int. J. High Perform. Comput. Appl.},
month = nov,
pages = {317–329},
numpages = {13}
}

@article{const-control-overhead,
title = "Using cost to control instrumentation overhead",
journal = "Theoretical Computer Science",
volume = "196",
number = "1",
pages = "241 - 258",
year = "1998",
issn = "0304-3975",
doi = "https://doi.org/10.1016/S0304-3975(97)86792-8",
url = "http://www.sciencedirect.com/science/article/pii/S0304397597867928",
author = "Jeffrey K. Hollingsworth and Barton P. Miller",
keywords = "Parallel program instrumention, Perturbation, Overhead, Data collection, Paradyn performance tools",
abstract = "We present a new data collection cost system that provides programmers with feedback about the impact data collection is having on their application. We allow programmers to define the level of perturbation their application can tolerate, and then regulate the amount of instrumentation to ensure that the threshold is not exceeded. Our approach is unique in that the type of data gathered remains constant; instead, we regulate when data are collected. This permits programmers to trade speed of isolation of a performance problem for less application perturbation. We implemented this cost system in the Paradyn Performance Tools and present several case studies demonstrating the accuracy of the cost system."
}
@INPROCEEDINGS{dynaic-instrumentation-scalable,
  author={J. K. {Hollingsworth} and B. P. {Miller} and J. {Cargille}},
  booktitle={Proceedings of IEEE Scalable High Performance Computing Conference}, 
  title={Dynamic program instrumentation for scalable performance tools}, 
  year={1994},
  volume={},
  number={},
  pages={841-850},}
  
  @inproceedings{mdl,
author = {Hollingsworth, J. K. and Niam, O. and Miller, B. P. and Xu, Zhichen and Goncalves, M. J. R. and Zheng, Ling},
title = {MDL: A Language And Compiler For Dynamic Program Instrumentation},
year = {1997},
isbn = {0818680903},
publisher = {IEEE Computer Society},
address = {USA},
booktitle = {Proceedings of the 1997 International Conference on Parallel Architectures and Compilation Techniques},
pages = {201},
numpages = {1},
keywords = {procedures, SPARC, MDL, Alpha architecture, files, dynamic program instrumentation, running programs, message channels, Power 2 architecture, Paradyn Parallel Performance Tools, performance data, dynamic code generation, compiler generators, platform independent descriptions, x86 architecture, PA-RISC, Metric Description Language, modules, instrumentation code, application program, nodes},
series = {PACT ’97}
}
@inproceedings{eel,
author = {Larus, James and Schnarr, Eric},
year = {1995},
month = {01},
pages = {291-300},
title = {EEL: Machine-Independent Executable Editing.},
volume = {30},
journal = {ACM SIGPLAN '95 Conference on Programming Language Design and Implementation (PLDI)},
doi = {10.1145/207110.207163}
}

